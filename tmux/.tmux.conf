# set default shell:
set-option -g default-shell $SHELL

# tell tmux to use 256 colour terminal
set -g default-terminal "screen-256color"

# keybindings:
# command prefix:
set-option -g prefix C-b
bind-key C-b send-prefix
#Ctrl-b ? List all keybindings

# panes:
set-option -g pane-border-fg blue
set-option -g pane-border-bg default
set-option -g pane-active-border-fg blue
set-option -g pane-active-border-bg default

# panes start at 1 instead of 0
set-option -g base-index 1
set-option -g pane-base-index 1

# window title:
set-option -g set-titles on
set-option -g set-titles-string '#{pane_current_command}'
set-window-option -g automatic-rename on

# current window navigation:
set-window-option -g mode-mouse on
set -g mouse-select-window on

# Sane scrolling, allow mouse outside boundaries
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# resizing:
bind-key -r C-h resize-pane -L
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R
# resize panes with mouse (drag borders)
set -g mouse-select-pane on
set -g mouse-resize-pane on
setw -g aggressive-resize on

# splitting and cycling:
unbind %
bind-key - split-window -v
unbind '"'
bind-key | split-window -h

bind-key C-a last-window
bind-key C-n next-window
bind-key C-p previous-window

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Message/command input colors
#set -g message-attr bright
#set -g message-fg black
#set -g message-bg yellow

# status bar:
set -g status-justify right
set -g status-bg black
set -g status-fg blue
set -g status-interval 5
set -g status-utf8 on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# setw -g window-status-format "#[bg=colour27,fg=colour16] #I #[bg=colour27,fg=colour16] #{pane_current_command} "
# setw -g window-status-current-format "#[bg=colour195,fg=colour16] #I #[bg=colour27,fg=colour16] #{pane_current_command} "
# set -g status-justify left
# set-option -g status-right '#[bg=colour27,fg=colour16] %H:%M #[colour16]'
# set-option -g status-left ''

setw -g window-status-format "#[bg=blue,fg=black] #I #[bg=blue,fg=black] #{pane_current_command} "
setw -g window-status-current-format "#[bg=white,fg=black] #I #[bg=blue,fg=black] #{pane_current_command} "
set -g status-justify left
set-option -g status-right '#[bg=blue,fg=black] #H #[default] #[bg=blue,fg=black] %H:%M #[default]'
set-option -g status-left ''

# enable vim mode
setw -g mode-keys vi
set-option -g status-keys vi

# y and p as in vim
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# bind -t vi-copy 'Space' halfpage-down
# bind -t vi-copy 'Bspace' halfpage-up
#  
#  # extra commands for interacting with the ICCCM clipboard
#  bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#  bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux
#  paste-buffer" 

# Smart pane switching with awareness of vim splits
 is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
 bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
 bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
 bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
 bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
 bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# TMUX PLUGINS
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '            \
tmux-plugins/tpm                 \
tmux-plugins/tmux-resurrect      \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
